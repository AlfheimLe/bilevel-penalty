# -*- coding: utf-8 -*-
"""
Created on Mon May 21 21:30:36 2018

@author: Akshay
"""

import numpy as np
import matplotlib.pyplot as plt


time_our = [0, 0.178926229477, 0.328664922714, 0.475185155869, 0.627611780167, 0.781234121323, 0.928338909149, 1.07798171043, 1.23441667557, 1.37623901367, 1.52719063759, 1.6831176281, 1.82991662025, 1.97411518097, 2.12138571739, 2.27222695351, 2.420028162, 2.57480754852, 2.71988115311, 2.87147860527, 3.0183866024, 3.16253700256, 3.32765822411, 3.47502937317, 3.62742738724, 3.76798996925, 3.91398653984, 4.05686073303, 4.20655269623, 4.35606746674, 4.51141247749, 4.65417404175, 4.79810161591, 4.95484437943, 5.10496530533, 5.25038852692, 5.39920897484, 5.5395031929, 5.69074578285, 5.84426879883, 5.99666466713, 6.14462685585, 6.29693889618, 6.44432806969, 6.58969073296, 6.74084200859, 6.89388976097, 7.04709768295, 7.1979364872, 7.35024819374, 7.49981803894, 7.65054063797, 7.79693546295, 7.9483025074, 8.09711833, 8.25654687881, 8.4050640583, 8.55441665649, 8.70370364189, 8.84901618958, 8.99588823318, 9.1507686615, 9.30080862045, 9.45266304016, 9.60562901497, 9.76088576317, 9.90858182907, 10.06246562, 10.2149184227, 10.364594841, 10.5168736935, 10.6656193256, 10.8102206707, 10.963539362, 11.106734705, 11.2608782768, 11.4070346832, 11.5559353352, 11.7053254604, 11.8548447609, 12.0005629063, 12.1486619473, 12.3006268024, 12.4616499901, 12.6087993622, 12.7568688869, 12.9095542908, 13.0570552826, 13.2124137402, 13.3778643131, 13.5234083652, 13.6776731491, 13.8257537365, 13.9666167736, 14.1142633915, 14.2669984341, 14.4120275974, 14.5729404449, 14.7240388393, 14.8804219723, 15.0246354103, 15.1814003944,]
loss_our = [17000, 8303.99759886, 4821.98761424, 3428.12199143, 2937.09280253, 2745.11082984, 2634.92390756, 2533.1984278, 2422.29500097, 2308.41444443, 2204.00155209, 2118.33807789, 2056.40609708, 2016.68531425, 1994.62977987, 1984.26053213, 1981.04831046, 1981.62725618, 1983.9093517, 1986.74249121, 1989.4768781, 1991.67919525, 1991.63534582, 1989.41710127, 1985.70245044, 1981.62709667, 1978.3336171, 1976.53805686, 1976.41947101, 1977.15613616, 1978.77222668, 1981.07535573, 1983.45119871, 1985.17341739, 1986.01680761, 1986.36413309, 1985.72879081, 1984.9708788, 1984.46105545, 1984.14734305, 1983.60109198, 1982.2399487, 1979.89423268, 1976.98853691, 1973.14513131, 1969.70926124, 1966.94779146, 1964.26483237, 1961.34229068, 1958.45681297, 1956.23561956, 1955.00816203, 1954.42965305, 1953.81875863, 1952.87872624, 1951.30024905, 1950.18775825, 1949.7382101, 1949.09294153, 1948.46350953, 1948.51791259, 1949.21107946, 1949.50627723, 1949.45721101, 1950.0392956, 1951.38039288, 1952.79527805, 1954.04887218, 1955.7508624, 1957.91606914, 1958.70587009, 1961.26546616, 1961.77617117, 1962.00882776, 1964.24731042, 1964.48642095, 1965.31069594, 1968.38903017, 1969.87707972, 1971.33562978, 1974.61190353, 1976.80174473, 1978.65628292, 1982.14384338, 1984.53215784, 1986.18359114, 1989.11852482, 1991.71784917, 1993.4669854, 1997.09340284, 1996.99461045, 2002.82562013, 2002.6688583, 2002.93795676, 2006.96101225, 2009.88929135, 2010.30261581, 2011.2947129, 2014.49095165, 2016.94339539, 2018.20355066, 2019.24135508]
time_our = np.array(time_our)
loss_our = np.array(loss_our)
ind_our = np.argwhere(time_our < 6).flatten()

#time_our_gpu = [0, 0.350737095,0.398496151,0.435716152,0.47025919,0.531784296,0.569690228,0.604271173,0.639827251,0.675132275,0.710239172,0.745716095,0.800564051,0.851835012,0.88794899,0.92384696,0.961151123,1.021058321,1.057332277,1.11854744,1.153499365,1.189483166,1.237586021,1.270620108,1.304887295,1.340006351,1.375164509,1.431762457,1.46633935,1.525615454,1.579064369,1.612882376,1.6493783,1.708754301,1.74371314,1.779525042,1.814851046,1.850835085,1.886254311,1.9484272,1.989690065,2.023766041,2.058192968,2.093545914,2.127369881,2.172595739,2.206803799,2.266023874,2.323769808,2.360509634]
#loss_our_gpu = [2115.988229,1432.020786,1103.953242,962.7271696,897.7265342,867.0537478,853.1101377,847.7312765,846.8325223,848.2450041,850.7761861,853.7154671,856.627242,859.2732311,861.5317774,863.3387352,864.6875676,865.5874261,866.0636894,866.1496528,865.5912772,864.3925658,862.616406,860.3615995,857.7457229,854.9375993,852.1752906,849.7686871,848.0275048,847.1250463,846.8598169,846.8751347,847.1515731,847.8321618,848.7498806,849.5411121,849.9239877,849.8702633,849.5173265,849.1034432,848.8397761,848.8641547,849.2169807,849.8667162,850.6768948,851.4536677,852.04765,852.3956329,852.4339122,852.3741881]
#time_our_gpu = np.array(time_our_gpu)
#loss_our_gpu = np.array(loss_our_gpu)
#ind_our_gpu = np.argwhere(time_our_gpu < 6).flatten()

time_farho = [0, 0.18696298599243164, 0.3750401496887207, 0.5771486282348632, 0.7705478668212891, 0.9721966743469238, 1.1804235458374024, 1.3789087295532227, 1.5836799144744873, 1.7779410362243653, 1.967572021484375, 2.1703343868255613, 2.3670270442962646, 2.5648522853851317, 2.7712759017944335, 2.9659908294677733, 3.1574378490447996, 3.355023717880249, 3.5454290866851808, 3.731430673599243, 3.9334245204925535, 4.12734432220459, 4.32997694015503, 4.530473852157593, 4.739023923873901, 4.938722610473633, 5.143885946273803, 5.329792594909668, 5.532302045822144, 5.7359062194824215, 5.93273229598999, 6.131084156036377, 6.322971773147583, 6.515164041519165, 6.7198488235473635, 6.913577604293823, 7.114446353912354, 7.314195442199707, 7.508157968521118, 7.705784463882447, 7.90159854888916, 8.09316020011902, 8.287474441528321, 8.481955575942994, 8.678235387802124, 8.876021146774292, 9.068418741226196, 9.269581365585328, 9.461543989181518, 9.665284204483033, 9.865429067611695, 10.071306133270264, 10.268132305145263, 10.466084146499634, 10.664232969284058, 10.863330698013305, 11.063802766799927, 11.261112165451049, 11.462103939056396, 11.662751770019531, 11.858664274215698, 12.05225944519043, 12.24798650741577, 12.443762159347534, 12.634382295608521, 12.825128412246704, 13.02390785217285, 13.221930170059204, 13.42301278114319, 13.623963022232056, 13.8250563621521, 14.018190717697143, 14.212994289398193, 14.416686868667602, 14.617843198776246, 14.804598712921143, 15.000964784622193, 15.19840955734253, 15.395707845687866, 15.59885778427124, 15.794182062149048, 15.998642301559448, 16.191040325164796, 16.383744621276854, 16.577590036392213, 16.777229690551756, 16.973617029190063, 17.171555089950562, 17.379409551620483, 17.58833441734314, 17.778217172622682, 17.974787425994872, 18.16810278892517, 18.374626874923706, 18.57682089805603, 18.76947979927063, 18.975221252441408, 19.170778369903566, 19.36167459487915, 19.55613751411438, 19.74038701057434, 19.946159505844115,]
loss_farho = [17000, 16704.270073089006, 9820.83770847527, 6654.467962260302, 4796.371191266565, 3802.4482025789694, 3271.19833383545, 2956.2150594819586, 2740.2074009416747, 2574.351801820182, 2440.726285754561, 2333.4219927847407, 2249.995352699526, 2188.145427817145, 2144.833931932277, 2116.4422115755465, 2099.262472858817, 2089.951158817399, 2085.793327405051, 2084.779825694437, 2085.553660945524, 2087.283855454885, 2089.5172725097627, 2092.048475346003, 2094.826254532728, 2097.8919185280906, 2101.3347764208784, 2105.254085852849, 2109.7253243430705, 2114.7752132612136, 2120.3723006608247, 2126.4359713570434, 2132.8591441345725, 2139.53461037603, 2146.375167841219, 2153.3219916788235, 2160.3411246368278, 2167.4127573332626, 2174.5196907531754, 2181.639954568578, 2188.745036214831, 2195.8023951518167, 2202.779540534002, 2209.6474395608666, 2216.3821375701837, 2222.9650096340183, 2229.3825543513753, 2235.6264388968566, 2241.6938699994794, 2247.5880969586033, 2253.3185309009436, 2258.9000188915206, 2264.3511072527103, 2269.691527754413, 2274.93927538202, 2280.1078105323936, 2285.203861316596, 2290.226501440013, 2295.167853522185, 2300.0153296909625, 2304.7547391274666, 2309.37337825116, 2313.8622627470168, 2318.2172949480473, 2322.4394828213653, 2326.5345680830624, 2330.512336871123, 2334.3857048181976, 2338.169505214923, 2341.8789938776854, 2345.5281942774604, 2349.1284567236903, 2352.6876699318914, 2356.21028387092, 2359.6981308313707, 2363.1516177665244, 2366.570919346027, 2369.9567981307837, 2373.31100447095, 2376.636313756041, 2379.9363988956643, 2383.2155782102554, 2386.478533333488, 2389.729909907098, 2392.973875578492, 2396.2136983451737, 2399.4514439082914, 2402.68793213078, 2405.922901770978, 2409.155349441202, 2412.38390353263, 2415.6071557399023, 2418.823891136719, 2422.0332549254927, 2425.234823981755, 2428.428628263236, 2431.6151322447427, 2434.7951228132974, 2437.96958223623, 2441.139522333181, 2444.305848025288, 2447.469240012188]
time_farho = np.array(time_farho)
loss_farho = np.array(loss_farho)
ind_farho = np.argwhere(time_farho < 6).flatten()

#time_farho_gpu = [0, 0.098151684,0.111967802,0.125980139,0.143127203,0.157550335,0.171745539,0.185959339,0.200978994,0.214508533,0.228283405,0.24253726,0.256862164,0.272143841,0.286283731,0.300037861,0.313529253,0.328835964,0.343087196,0.358017445,0.372013807,0.385569334,0.400164366,0.414825916,0.430618286,0.443853378,0.456595421,0.470585108,0.485327005,0.498608351,0.512364626,0.525408268,0.539026022,0.552833557,0.56788373,0.582566261,0.598623753,0.614462852,0.628946304,0.643805027,0.659552574,0.673795223,0.686960459,0.700151443,0.713459492,0.726110458,0.740502834,0.75347805,0.767333269,0.782942057]
#loss_farho_gpu = [2115.988229,1724.513123,1500.663723,1349.401982,1241.45548,1162.301715,1102.935777,1057.551115,1022.277579,994.4610916,972.2423678,954.3050669,939.6781511,927.6529508,917.6867912,909.3698806,902.3857481,896.4884181,891.4779771,887.2074531,883.547151,880.3945164,877.6743179,875.3145594,873.261942,871.4686216,869.8980025,868.5268183,867.314983,866.2439673,865.2987228,864.4625206,863.719233,863.0560367,862.4676662,861.9401534,861.4707353,861.0523784,860.6744604,860.3357231,860.0297521,859.7588758,859.5166944,859.2957597,859.0936961,858.9151727,858.7495445,858.6064629,858.4756623,858.3593735,]
#time_farho_gpu = np.array(time_farho_gpu)
#loss_farho_gpu = np.array(loss_farho_gpu)
#ind_farho_gpu = np.argwhere(time_farho_gpu < 6).flatten()

time_hoag = [0,  0.317201735973, 0.673956935406, 1.07050386667, 1.47202110529, 1.87407248259, 2.28126500845, 2.66854129314, 2.99736466646, 3.34449822903, 3.63371321678, 3.94185427427, 4.22088745594, 4.49328773975, 4.75337430954, 5.03304759502, 5.28853363991, 5.53602880478, 5.78224754572, 6.021816926, 6.26478761196, 6.51181762218, 6.75305238247, 6.99976678133, 7.26422631502, 7.50445031166, 7.73677647352, 7.98835059643, 8.22756515741, 8.48674222946, 8.73905140162, 8.99762057066, 9.25819779873, 9.51243961096, 9.77187579155, 10.0220428801, 10.2613170648, 10.5259479928, 10.7858500624, 11.0604132986, 11.3179482841, 11.5817720604, 11.8653960943, 12.1344245076, 12.3835654283, 12.6522221684, 12.8994799805, 13.148284781, 13.4000391507, 13.655775075, 13.9065782166, 14.1354453731, 14.3924116206, 14.6522810483, 14.9125521016, 15.1741053033, 15.4360131192, 15.699650209, 15.9498913598, 16.2138994646, 16.4661329961, 16.7218698311, 16.9789219928, 17.2353051901, 17.486135416, 17.7701440883, 18.0579855871, 18.3139245248, 18.5976410365, 18.8606739998, 19.1186975026, 19.3953450632, 19.6927488208, 19.9875445223, 20.2856195569, 20.57790411, 20.8763655639, 21.1772544599, 21.484081161, 21.7878415442, 22.0722779155, 22.5305741835, 23.6076217031, 23.9217322183, 24.2160235167, 24.5154750681, 24.9286366343, 25.3443011379, 25.9159176016, 26.4396529269, 26.8058684874, 27.1654789257, 27.5988307905, 28.1929539156, 28.9069285345, 29.3553165007, 30.0453308296, 30.6760152483, 31.5407333779, 32.1434699583, 33.141289928]
loss_hoag = [17000, 3717.77676858, 2308.87771337, 2132.32182679, 2075.12906067, 2054.90965854, 2050.86443397, 2050.80141664, 2050.82716574, 2049.78442444, 2050.18599212, 2051.02506049, 2051.60636769, 2052.08340205, 2052.48665518, 2053.04721961, 2053.55264693, 2053.87854916, 2054.03914599, 2054.15047487, 2054.35355654, 2054.43901347, 2054.43388723, 2054.52627807, 2054.54902499, 2054.49406154, 2054.50728838, 2054.46332925, 2054.46434099, 2054.45089993, 2054.44791661, 2054.49775546, 2054.50470907, 2054.51409211, 2054.54237358, 2054.55988791, 2054.57290961, 2054.5849397, 2054.58584, 2054.59525477, 2054.60528535, 2054.61084161, 2054.6327425, 2054.64046452, 2054.63750869, 2054.64160498, 2054.63660257, 2054.64104302, 2054.64119696, 2054.63798919, 2054.64252436, 2054.6452334, 2054.64644269, 2054.64747117, 2054.6490968, 2054.64793974, 2054.64928635, 2054.64944029, 2054.64877712, 2054.64864012, 2054.64868752, 2054.64989728, 2054.64872133, 2054.64854034, 2054.64939523, 2054.64853619, 2054.64881575, 2054.64892924, 2054.64870681, 2054.64894793, 2054.64867, 2054.64886388, 2054.64868572, 2054.64865373, 2054.64741654, 2054.6537662, 2054.6589718, 2054.97125056, 2057.80557101, 2094.2033256, 2094.25054463, 2170.19828462, 2134.08284182, 2059.33141752, 2072.69140653, 2073.70657399, 2098.66844134, 2098.74266459, 2093.30545592, 2095.02687144, 2064.0361807, 2064.3267095, 2072.50746125, 2106.85222593, 2118.42719387, 2077.96834921, 2111.34657205, 2113.30359048, 2114.27067135, 2108.61103889, 2234.52023054]
time_hoag = np.array(time_hoag)
loss_hoag = np.array(loss_hoag)
ind_hoag = np.argwhere(time_hoag < 6).flatten()

time_gs = [3.97836565018, 7.36416464329, 8.62748695374, 9.20475340843, 9.47131525755, 9.60861296892, 9.68848733664, 9.74560994625, 9.80766067982, 9.86152346611,]
loss_gs = [5054.71686429, 3658.92973259, 2597.5805076, 2065.36915335, 2065.36915335, 2065.36915335, 2065.36915335, 2065.36915335, 2065.36915335, 2065.36915335,]
time_gs = np.array(time_gs)
loss_gs = np.array(loss_gs)
ind_gs = np.argwhere(time_gs < 70).flatten()

time_opt = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
loss_opt = [1660, 1660, 1660, 1660, 1660, 1660, 1660, 1660, 1660, 1660, 1660]
time_opt = np.array(time_opt)
loss_opt = np.array(loss_opt)
ind_opt = np.argwhere(time_opt <= 10).flatten()

plt.figure(1)
plt.title("Test Loss Vs Time on realsim dataset")  
plt.xlabel("Time (seconds)")
plt.ylabel("Loss on Test Set")
plt.plot(time_our[ind_our], loss_our[ind_our], 'b', label="Our")
plt.plot(time_farho[ind_farho], loss_farho[ind_farho], 'g', label="FARHO")
plt.plot(time_hoag[ind_hoag], loss_hoag[ind_hoag], 'r', label="HOAG")
#plt.plot(time_gs[ind_gs], loss_gs[ind_gs], 'c', label="GRID SEARCH")
#plt.plot(time_opt[ind_opt], loss_opt[ind_opt], 'm', label="Optimal with Train + Val Set")
#plt.axis([0, 5, 2500, 4000])
#plt.yticks(np.arange(700, 3600, 100))
#plt.xticks(np.arange(0.0, 6, 1))
plt.legend(loc="best")
plt.show()